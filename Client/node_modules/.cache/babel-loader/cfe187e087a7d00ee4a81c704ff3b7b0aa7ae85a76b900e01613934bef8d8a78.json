{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\ClonedRepo\\\\TodoList\\\\Client\\\\src\\\\components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router\";\n// import \"./style.css\"; // Import your stylesheet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const inputRef = useRef(null);\n  const history = useNavigate();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTaskValue, setEditedTaskValue] = useState(\"\");\n\n  // ... (your existing code)\n\n  const handleEdit = (taskId, taskValue) => {\n    setEditingTaskId(taskId);\n    setEditedTaskValue(taskValue);\n  };\n  const handleSave = taskId => {\n    if (editedTaskValue) {\n      handleEditRequest(taskId, editedTaskValue);\n    } else {\n      alert(\"Please enter a task\");\n    }\n  };\n  useEffect(() => {\n    checkLoggedIn();\n    fetchAndStore();\n  }, []);\n  const getToken = () => {\n    return localStorage.getItem(\"token\");\n  };\n  const checkLoggedIn = () => {\n    const token = getToken();\n    if (!token) {\n      history(\"/\");\n      return;\n    }\n    try {\n      const decodedToken = JSON.parse(atob(token.split(\".\")[1]));\n      if (!decodedToken) {\n        history(\"/\");\n        return;\n      }\n      console.log(\"User is logged in and has a valid token.\");\n    } catch (error) {\n      console.error(\"Error while checking login status:\", error);\n      history(\"/\");\n    }\n  };\n  const fetchAndStore = () => {\n    fetch(\"https://todo-list-pl2e.vercel.app/piggy\", {\n      method: \"GET\",\n      headers: {\n        authorization: localStorage.getItem(\"token\")\n      }\n    }).then(response => response.json()).then(data => {\n      const userId = getUserIdFromToken();\n      const userTasks = data.filter(task => task.userId === userId);\n      setTasks(userTasks);\n    }).catch(err => {\n      console.error(\"Error \", err);\n    });\n  };\n  const getUserIdFromToken = () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      return null;\n    }\n    try {\n      const decodedToken = JSON.parse(atob(token.split(\".\")[1]));\n      return decodedToken.id;\n    } catch (error) {\n      console.error(\"Error while decoding token:\", error);\n      return null;\n    }\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (inputValue) {\n      const newTask = {\n        task: inputValue,\n        userId: getUserIdFromToken()\n      };\n      fetch(\"https://todo-list-pl2e.vercel.app/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify(newTask)\n      }).then(res => res.json()).then(data => {\n        setTasks([...tasks, data]);\n        setInputValue(\"\");\n      }).catch(error => {\n        console.error(\"Error while adding task:\", error);\n      });\n    } else {\n      alert(\"Please enter a task\");\n    }\n  };\n  const handleDelete = taskId => {\n    // Send a DELETE request to delete the task\n    fetch(`https://todo-list-pl2e.vercel.app/tasks/${taskId}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      // Remove the deleted task from the tasks array\n      const updatedTasks = tasks.filter(task => task._id !== taskId);\n      setTasks(updatedTasks);\n    }).catch(error => {\n      console.error(\"Error while deleting task:\", error);\n    });\n  };\n  function logout() {\n    console.log(\"Logout function started\");\n    console.log(localStorage.getItem(\"token\"));\n    localStorage.removeItem(\"token\");\n    history(\"/\");\n  }\n  const handleEditRequest = (taskId, newTaskValue) => {\n    fetch(`https://todo-list-pl2e.vercel.app/tasks/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        task: newTaskValue\n      })\n    }).then(response => response.json()).then(() => {\n      const updatedTasks = tasks.map(task => task._id === taskId ? {\n        ...task,\n        task: newTaskValue\n      } : task);\n      setTasks(updatedTasks);\n      setEditingTaskId(null);\n      setEditedTaskValue(\"\");\n    }).catch(error => {\n      console.error(\"Error while editing task:\", error);\n    });\n  };\n  useEffect(() => {\n    if (editingTaskId) {\n      inputRef.current.focus();\n    }\n  }, [editingTaskId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pig\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"together\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"h2\",\n          children: \"TASK LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"logoutBtn\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"inputtext\",\n          placeholder: \"enter \",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"submit\",\n          value: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tdolist\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TASKS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tasks\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: editingTaskId === task._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: inputRef,\n                  className: \"taskinput\",\n                  value: editedTaskValue,\n                  onChange: e => setEditedTaskValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"savebtn\",\n                  onClick: () => handleSave(task._id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"taskinput\",\n                  value: task.task,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"editbtn\",\n                  onClick: () => handleEdit(task._id, task.task),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delbtn\",\n                  onClick: () => handleDelete(task._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"VFJZdZrGb4aenKouR+ceAVgsiKQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","inputRef","history","tasks","setTasks","inputValue","setInputValue","editingTaskId","setEditingTaskId","editedTaskValue","setEditedTaskValue","handleEdit","taskId","taskValue","handleSave","handleEditRequest","alert","checkLoggedIn","fetchAndStore","getToken","localStorage","getItem","token","decodedToken","JSON","parse","atob","split","console","log","error","fetch","method","headers","authorization","then","response","json","data","userId","getUserIdFromToken","userTasks","filter","task","catch","err","id","handleFormSubmit","e","preventDefault","newTask","Authorization","body","stringify","res","handleDelete","updatedTasks","_id","logout","removeItem","newTaskValue","map","current","focus","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","className","ref","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/ClonedRepo/TodoList/Client/src/components/Todo.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n// import \"./style.css\"; // Import your stylesheet\r\n\r\nconst Todo = () => {\r\n  const inputRef = useRef(null);\r\n  const history = useNavigate();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editedTaskValue, setEditedTaskValue] = useState(\"\");\r\n\r\n  // ... (your existing code)\r\n\r\n  const handleEdit = (taskId, taskValue) => {\r\n    setEditingTaskId(taskId);\r\n    setEditedTaskValue(taskValue);\r\n  };\r\n\r\n  const handleSave = (taskId) => {\r\n    if (editedTaskValue) {\r\n      handleEditRequest(taskId, editedTaskValue);\r\n    } else {\r\n      alert(\"Please enter a task\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkLoggedIn();\r\n    fetchAndStore();\r\n  }, []);\r\n\r\n  const getToken = () => {\r\n    return localStorage.getItem(\"token\");\r\n  };\r\n\r\n  const checkLoggedIn = () => {\r\n    const token = getToken();\r\n    if (!token) {\r\n      history(\"/\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const decodedToken = JSON.parse(atob(token.split(\".\")[1]));\r\n      if (!decodedToken) {\r\n        history(\"/\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"User is logged in and has a valid token.\");\r\n    } catch (error) {\r\n      console.error(\"Error while checking login status:\", error);\r\n      history(\"/\");\r\n    }\r\n  };\r\n\r\n  const fetchAndStore = () => {\r\n    fetch(\"https://todo-list-pl2e.vercel.app/piggy\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const userId = getUserIdFromToken();\r\n        const userTasks = data.filter((task) => task.userId === userId);\r\n        setTasks(userTasks);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error \", err);\r\n      });\r\n  };\r\n\r\n  const getUserIdFromToken = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      return null;\r\n    }\r\n    try {\r\n      const decodedToken = JSON.parse(atob(token.split(\".\")[1]));\r\n      return decodedToken.id;\r\n    } catch (error) {\r\n      console.error(\"Error while decoding token:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue) {\r\n      const newTask = { task: inputValue, userId: getUserIdFromToken() };\r\n      fetch(\"https://todo-list-pl2e.vercel.app/tasks\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify(newTask),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setTasks([...tasks, data]);\r\n          setInputValue(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error while adding task:\", error);\r\n        });\r\n    } else {\r\n      alert(\"Please enter a task\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = (taskId) => {\r\n    // Send a DELETE request to delete the task\r\n    fetch(`https://todo-list-pl2e.vercel.app/tasks/${taskId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        // Remove the deleted task from the tasks array\r\n        const updatedTasks = tasks.filter((task) => task._id !== taskId);\r\n        setTasks(updatedTasks);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error while deleting task:\", error);\r\n      });\r\n  };\r\n\r\n  function logout() {\r\n    console.log(\"Logout function started\");\r\n    console.log(localStorage.getItem(\"token\"));\r\n    localStorage.removeItem(\"token\");\r\n    history(\"/\");\r\n  }\r\n\r\n  const handleEditRequest = (taskId, newTaskValue) => {\r\n    fetch(`https://todo-list-pl2e.vercel.app/tasks/${taskId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ task: newTaskValue }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        const updatedTasks = tasks.map((task) =>\r\n          task._id === taskId ? { ...task, task: newTaskValue } : task\r\n        );\r\n        setTasks(updatedTasks);\r\n        setEditingTaskId(null);\r\n        setEditedTaskValue(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error while editing task:\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editingTaskId) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editingTaskId]);\r\n\r\n  return (\r\n    <div id=\"pig\">\r\n      {/* <div id=\"pig\"> */}\r\n      <header>\r\n        <header id=\"together\">\r\n          <h2 id=\"h2\">TASK LIST</h2>\r\n          <button id=\"logoutBtn\" onClick={logout}>\r\n            Logout\r\n          </button>\r\n        </header>\r\n\r\n        <form id=\"form\" onSubmit={handleFormSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"inputtext\"\r\n            placeholder=\"enter \"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <input type=\"submit\" id=\"submit\" value=\"Add Task\" />\r\n        </form>\r\n      </header>\r\n      <main>\r\n        <section className=\"tdolist\">\r\n          <h2>TASKS</h2>\r\n          <div id=\"tasks\">\r\n            {tasks.map((task) => (\r\n              <div key={task._id} className=\"task\">\r\n                <div className=\"content\">\r\n                  {editingTaskId === task._id ? (\r\n                    <>\r\n                      <input\r\n                        ref={inputRef}\r\n                        className=\"taskinput\"\r\n                        value={editedTaskValue}\r\n                        onChange={(e) => setEditedTaskValue(e.target.value)}\r\n                      />\r\n                      <button\r\n                        className=\"savebtn\"\r\n                        onClick={() => handleSave(task._id)}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <input className=\"taskinput\" value={task.task} readOnly />\r\n                      <button\r\n                        className=\"editbtn\"\r\n                        onClick={() => handleEdit(task._id, task.task)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        className=\"delbtn\"\r\n                        onClick={() => handleDelete(task._id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}