{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\ClonedRepo\\\\TodoList\\\\Client\\\\src\\\\components\\\\TodoPage.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"./TodoPage.css\";\n// import jwt from \"jsonwebtoken\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const history = useNavigate();\n  const {\n    taskId\n  } = useParams();\n  console.log(taskId + \" needed\");\n  const [title, settitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const getToken = () => {\n    return localStorage.getItem(\"token\");\n  };\n  const handleTextChange = newText => {\n    setText(newText);\n    console.log(text); // Update the text state with the new content\n  };\n\n  const CreateTask = async () => {\n    try {\n      const token = getToken();\n      console.log(token + \" this is token\");\n      const decodedtoken = jwt_decode(token);\n      const userId = decodedtoken.id;\n      const response = await axios.post(\"http://localhost:3000/api/tasks\", {\n        title,\n        task: text,\n        userId\n      });\n      console.log(\"Task create \", response.data);\n      settitle(\"\");\n      settitle(\"\");\n      history(\"/todo\");\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n  const fetchTask = async () => {\n    _s();\n    try {\n      const {\n        taskId1\n      } = useParams();\n      const token = getToken();\n      console.log(token + \" this is token\");\n      const decodedtoken = jwt_decode(token);\n      const userId = decodedtoken.id;\n      console.log(userId);\n      const response = await axios.get(`http://localhost:3000/api/tasks/todo/${taskId1}`, {\n        headers: {\n          Authorization: token\n        },\n        params: {\n          taskId\n        }\n      });\n\n      // if (response.data.length > 0) {\n      const fetchedData = response.data;\n      settitle(fetchedData.title);\n      handleTextChange(fetchedData.task);\n      // }\n\n      console.log(response.title);\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n  _s(fetchTask, \"qcwOdqwhi2FlguZM3IMqZqiA6mk=\", false, function () {\n    return [useParams];\n  });\n  useEffect(() => {\n    fetchTask();\n  }, []);\n  const UpdateTask = async () => {\n    try {\n      const token = getToken();\n      console.log(token + \" this is token\");\n      const decodedtoken = jwt_decode(token);\n      const userId = decodedtoken.id;\n      const response = await axios.put(`http://localhost:3000/api/tasks/todo/${taskId}/edit`, {\n        title,\n        task: text,\n        userId\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setText(\"\");\n      settitle(\"\");\n      console.log(\"response\", response);\n      history(\"/todo\");\n    } catch (error) {\n      console.log(error + \" error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-title\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => settitle(e.target.value),\n        className: \"title-input1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-body\",\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: text,\n        onChange: handleTextChange,\n        className: \"body-input\",\n        placeholder: \"Enter here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), taskId ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: UpdateTask,\n      className: \"edit-btn\",\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: CreateTask,\n      className: \"save-btn\",\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s2(TodoPage, \"ZglzjPR6enyzpfChsrzeGhivOMA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = TodoPage;\nexport default TodoPage;\nvar _c;\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"names":["React","useEffect","useState","ReactQuill","jwt_decode","axios","useParams","useNavigate","jsxDEV","_jsxDEV","TodoPage","_s2","_s","$RefreshSig$","history","taskId","console","log","title","settitle","text","setText","getToken","localStorage","getItem","handleTextChange","newText","CreateTask","token","decodedtoken","userId","id","response","post","task","data","error","fetchTask","taskId1","get","headers","Authorization","params","fetchedData","UpdateTask","put","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/ClonedRepo/TodoList/Client/src/components/TodoPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./TodoPage.css\";\r\n// import jwt from \"jsonwebtoken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { useNavigate } from \"react-router\";\r\nfunction TodoPage() {\r\n  const history = useNavigate();\r\n  const { taskId } = useParams();\r\n  console.log(taskId + \" needed\");\r\n  const [title, settitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const getToken = () => {\r\n    return localStorage.getItem(\"token\");\r\n  };\r\n\r\n  const handleTextChange = (newText) => {\r\n    setText(newText);\r\n    console.log(text); // Update the text state with the new content\r\n  };\r\n\r\n  const CreateTask = async () => {\r\n    try {\r\n      const token = getToken();\r\n      console.log(token + \" this is token\");\r\n      const decodedtoken = jwt_decode(token);\r\n      const userId = decodedtoken.id;\r\n      const response = await axios.post(\"http://localhost:3000/api/tasks\", {\r\n        title,\r\n        task: text,\r\n        userId,\r\n      });\r\n      console.log(\"Task create \", response.data);\r\n      settitle(\"\");\r\n      settitle(\"\");\r\n      history(\"/todo\");\r\n    } catch (error) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  const fetchTask = async () => {\r\n    try {\r\n      const { taskId1 } = useParams();\r\n      const token = getToken();\r\n      console.log(token + \" this is token\");\r\n      const decodedtoken = jwt_decode(token);\r\n      const userId = decodedtoken.id;\r\n      console.log(userId);\r\n\r\n      const response = await axios.get(\r\n        `http://localhost:3000/api/tasks/todo/${taskId1}`,\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n          params: { taskId },\r\n        }\r\n      );\r\n\r\n      // if (response.data.length > 0) {\r\n      const fetchedData = response.data;\r\n      settitle(fetchedData.title);\r\n      handleTextChange(fetchedData.task);\r\n      // }\r\n\r\n      console.log(response.title);\r\n    } catch (error) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchTask();\r\n  }, []);\r\n\r\n  const UpdateTask = async () => {\r\n    try {\r\n      const token = getToken();\r\n      console.log(token + \" this is token\");\r\n      const decodedtoken = jwt_decode(token);\r\n      const userId = decodedtoken.id;\r\n      const response = await axios.put(\r\n        `http://localhost:3000/api/tasks/todo/${taskId}/edit`,\r\n        {\r\n          title,\r\n          task: text,\r\n          userId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n      setText(\"\");\r\n      settitle(\"\");\r\n      console.log(\"response\", response);\r\n      history(\"/todo\");\r\n    } catch (error) {\r\n      console.log(error + \" error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <div className=\"todo-title\">\r\n        <input\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => settitle(e.target.value)}\r\n          className=\"title-input1\"\r\n        />\r\n      </div>\r\n      <br />\r\n      <div className=\"todo-body\">\r\n        <ReactQuill\r\n          value={text}\r\n          onChange={handleTextChange}\r\n          className=\"body-input\"\r\n          placeholder=\"Enter here ...\"\r\n        />\r\n      </div>\r\n      {taskId ? (\r\n        <button onClick={UpdateTask} className=\"edit-btn\">\r\n          Save Changes\r\n        </button>\r\n      ) : (\r\n        <button onClick={CreateTask} className=\"save-btn\">\r\n          Create\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}